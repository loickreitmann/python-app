name: cicd

on:
  push:
    paths:
      - src/**
    branches:
      - main

jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-6`" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/arm64/v8 \
            -t ${{ vars.DOCKERHUB_USERNAME }}/python-app:${{ env.SHORT_SHA }} \
            --push .
    outputs:
      short_sha: ${{ env.SHORT_SHA }}
  update-helm-chart:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - uses: actions/checkout@v4
      - name: Modify helm values file
        shell: bash
        env:
          SHORT_SHA: ${{ needs.docker-build.outputs.short_sha }}
        run: |
          echo ${{ env.SHORT_SHA }}
          pip install yq
          yq -Yi '.image.tag = "${{ env.SHORT_SHA }}"' charts/python-app/values.yaml
      - name: Commit modified helm values file
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Updated values.yaml with image tag ${{ env.SHORT_SHA }}'
  argocd-sync:
    runs-on: self-hosted
    needs: update-helm-chart
    steps:
      - name: Install argocd CLI
        shell: bash
        run: |
          curl -ksSL -o argocd http://argocd-server.argocd/download/argocd-linux-arm64
          chmod +x argocd
          sudo mv ./argocd /usr/local/bin/argocd
      - name: Argo CD App Sync
        shell: bash
        run: |
          argocd login argocd-server.argocd \
            --insecure \
            --skip-test-tls \
            --username admin \
            --password ${{ secrets.ARGOCD_ADMIN_PASSWORD }}
          argocd app sync python-app